To which extent do you talk about efficiency and optimizations?
I regularly talk about "pass by value" vs. "pass by reference to const", and the possibility to return a const reference to a member variable instead of returning a value which makes a copy of the member variable. As Scott Meyers put it: "If you're not at all interested in performance, shouldn't you be in the Python room down the hall?" But I rarely talked about the cost of `std::map::operator[]`.
I've mentored the exercise "nucleotide-count" a lot.  Most implementations iterate over the DNA and execute `++counter[nucleotide]`. Recently I got curious and benchmarked that vs. multiple calls to `std::count()` vs. using a local arrays for the counting. The local array was the fastest but even multiple calls to `std::count()` were about 14 times faster than repeatedly calling `std::map::operator[]`.
